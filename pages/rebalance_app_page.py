from pages.formatter_page import Formatter
from pages.moex_clien_page import MoexClient
from pages.portfolio_page import Portfolio
from pages.portfolio_printer_page import PortfolioPrinter
from pages.user_input_handler import UserInputHandler

class RebalanceApp:
    def __init__(self, tickers, json_file_path='portfolio_data.json'):
        self.tickers = tickers
        self.moex_client = MoexClient()
        self.formatter = Formatter()
        self.user_input_handler = UserInputHandler(json_file_path)
        self.portfolio = None

    def run(self):
        moex_data = self.moex_client.fetch_data(self.tickers)
        if not moex_data:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
            return

        user_inputs = self.user_input_handler.get_inputs(self.tickers)
        self.portfolio = Portfolio(self.tickers, moex_data, user_inputs)

        # üîπ –ù–æ–≤—ã–π –≤–≤–æ–¥
        try:
            free_cash = float(input("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–æ–≤—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π (‚ÇΩ): ").strip() or 0)
        except ValueError:
            free_cash = 0

        printer = PortfolioPrinter(self.portfolio, self.formatter, free_cash)
        print("\n–°—Ç—Ä–∞—Ç–µ–≥–∏—è —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è:")
        printer.print()